
import numpy as np

penalty_12          = [ 'l2']#'l1',
penalty_12none      = ['l1', 'l2', None]
penalty_all         = ['l1', 'l2', None, 'elasticnet']
penalty_12e         = ['l1', 'l2', 'elasticnet']
max_iter            = [100 ,  300, 1000]
max_iter_inf        = [100 ,  300, 500, 1000, np.inf]
max_iter_inf2       = [100 ,  300, 500, 1000, -1]
n_iter              = [5   ,   10, 20]
tol                 = [1e-4, 1e-3, 1e-2]
alpha               = [1e-5, 1e-4, 1e-3, 1e-2, 0.1, 1, 3, 10]
alpha_small         = [1e-5, 1e-3, 0.1 , 1]
C                   = [1e-2, 0.1 , 1, 5, 10]
C_small             = [ 0.1,   1 , 5]
degree              = [1, 2, 3, 4, 5]
eta0                = [1e-4, 1e-3, 1e-2, 0.1]
epsilon             = [1e-3, 1e-2, 0.1, 0]
warm_start          = [True, False]
normalize           = [True, False]
shrinking           = [True, False]
kernel              = ['linear']#, 'rbf', 'sigmoid',  'poly']#,  they are very slow
gamma               = list(np.logspace(-9, 3, 6)) + ['auto']
gamma_small         = list(np.logspace(-6, 3, 3)) + ['auto']
coef0               = [0, 0.1, 0.3, 0.5, 0.7, 1]
coef0_small         = [0, 0.4, 0.7, 1]
nu                  = [1e-4, 1e-2, 0.1, 0.3, 0.5, 0.75, 0.9]
nu_small            = [1e-2, 0.1, 0.5, 0.9]
n_estimators        = [2, 3, 5, 10, 25, 50, 100]
n_estimators_small  = [2, 10, 25, 100]
n_neighbors         = [1, 3, 10, 15, 30]
neighbor_leaf_size  = [1, 2, 5, 10, 20, 30, 50, 100]
neighbor_radius     = [1e-2, 0.1, 1, 5, 10]
neighbor_algo       = ['ball_tree' , 'kd_tree', 'brute']
neighbor_metric     = ['cityblock' , 'euclidean', 'l1', 'l2', 'manhattan']
learning_rate       = ['invscaling', 'adaptive', 'constant' ]
learning_rate_small = ['invscaling', 'adaptive']
max_features        = [None, 'auto', 'log2', 3, 5, 10, 25, 50]
max_features_small  = [None, 'auto', 'log2', 3, 5, 10]
max_depth           = [None, 3, 8, 20, 50]
max_depth_small     = [None, 5, 10]
min_samples_split   = [2, 5, 10, 0.1]
min_impurity_split  = [1e-7, 1e-6, 1e-5, 1e-4, 1e-3]
min_samples_leaf    = [2]
#tree_learning_rate  = [0.8, 1]



